%% Preprocessing of US data
clear all; clc;

% Load c3d and check for triggerpulse to catch where US is recorded
[Markers,MLabels,VideoFrameRate,AnalogSignals,ALabels,AUnits,AnalogFrameRate,Event,ParameterGroup,CameraInfo] = readC3D('walking_SLOW_08.c3d');
index_UStrigger = find(strcmp(ALabels, 'Acceleration.triggerpulse 2'));
UStrigger = AnalogSignals(:,index_UStrigger);
USstart_index = find(UStrigger > mean(UStrigger),1,'first');
USstop_index = find(UStrigger > mean(UStrigger),1,'last');
length_USdata = (USstop_index - USstart_index)/1000;

% Read out US data
% USdata = load('walking_SLOW_08_FLPA.mat');
% fascicledata = USdata.fascicle.length.millimeter;
% if abs((length(fascicledata)/60 - length_USdata)) > 0.05 % US data at 60Hz
%     error('Recorded US signal is longer than indicated by trigger signal.')
% end
% time_US_60Hz = 0:1/60:(length(fascicledata)/60)-1/60;
% time_US_100Hz = 0:1/100:(length(fascicledata)/60)-1/60;
% fascicledata_100Hz = spline(time_US_60Hz,fascicledata,time_US_100Hz);
% plot(time_US_100Hz,fascicledata_100Hz); hold on;
% plot(time_US_60Hz,fascicledata); 


% Split up IK, ID, US per trial
% Timings are indicated on the figure and refer to timestamps in .sto files
timing = [2.39 3.59;
          3.61 4.76;
          4.78 5.98;
          6.00 7.19;
          7.21 8.40]
IKdata = importdata('walking_SLOW_08_IKKS.mot');
IDdata = importdata('walking_SLOW_08_ID.sto');

% Write IK, ID, US per trial and synchronized as .mot file
for i = 1:size(timing,1)
    saveName = ['trial_' num2str(i)];
    
    % IK file
    IKstart_index = find(IKdata.data(:,1) == timing(i,1));
    IKstop_index = find(IKdata.data(:,1) == timing(i,2));
    IKdata_trial = IKdata.data(IKstart_index:IKstop_index,:);
    
    generateMotFile(IKdata_trial, IKdata.colheaders, [saveName '_IK.mot']);
    
    % ID file
    IDstart_index = find(IDdata.data(:,1) == timing(i,1));
    IDstop_index = find(IDdata.data(:,1) == timing(i,2));
    IDdata_trial = IDdata.data(IDstart_index:IDstop_index,:);
    
    generateMotFile(IDdata_trial, IDdata.colheaders, [saveName '_ID.mot']);

    % US file
    timing_US_start = round(timing(i,1) - USstart_index/1000,2);
    timing_US_end = round(timing(i,2) - USstart_index/1000,2);
    USstart_trial_index = find(timing_US_start - 0.001 < time_US_100Hz & time_US_100Hz < timing_US_start + 0.001);
    USstop_trial_index = find(timing_US_end - 0.001 < time_US_100Hz & time_US_100Hz < timing_US_end + 0.001 );
    US_trial_time = time_US_100Hz(USstart_trial_index:USstop_trial_index)' + round(USstart_index/1000,2);
    USdata_trial = [US_trial_time   fascicledata_100Hz(USstart_trial_index:USstop_trial_index)'];
    
    generateMotFile(USdata_trial, {'time' 'med_gas_l'},  [saveName '_US.mot']);
end
