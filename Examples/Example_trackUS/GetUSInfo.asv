function [DatStore] = GetUSInfo(Misc,DatStore)
%GetEMGInfo Reads the file with EMG information (.sto)., runs activation
%dynamics on the EMG data when asked and puts the EMG data in the right
%format (handles copies and so on).



% Author: Maarten Afschrift

boolUS = 0;
% check if the input is correct
if isfield(Misc,'UStracking') && Misc.UStracking == 1
    boolUS = 1;
    nF = length(Misc.USfile);
    if nF ~=length(DatStore)
        disp('Warning: number of US files is not equal to the number of IK or ID files.');
    end
end


if boolUS    
    % file information
    nFiles = length(Misc.USfile);
    % Load the data and check for errors
    for iFile = 1:nF        
        % get information for the EMG constraints
        USfile(iFile)      = importdata(Misc.USfile{nF});        
    end    
    % prevent errors with the headers
    for iFile = 1:nF
        if ~isfield(USfile(iFile),'colheaders')
            USfile(iFile).colheaders = strsplit(USfile(1).textdata{end});
        end
    end
%     TOD0
%     check if we have to update the headers based on user input, but here
%     for the US input??
%     bool_updateheader   = 0;
%     if isfield(Misc,'EMGheaders') && ~isempty(Misc.EMGheaders);        
%         bool_updateheader=1;
%     end
    % verify if the selected muscles are in the model
    iFile       = 1;    
    bool_error  = 0;
    IndError=zeros(length(Misc.USSelection),1);
    for i=1:length(Misc.USSelection)
        if ~any(strcmp(Misc.USSelection{i},DatStore(iFile).MuscleNames))
            disp(['Could not find ' Misc.USSelection{i} ' in the model, update the Misc.USSelection structure']);
            bool_error=1;
            IndError(i)=1;
        end
    end
    % verify if the muscles in the .mot files are in the model
    USheaders  = USFile(iFile).colheaders;
    if bool_updateheader
       USheaders      = Misc.USheaders; 
    end
    for i=1:length(Misc.USSelection)
        if ~any(strcmp(Misc.EMGSelection{i},USheaders))
            if bool_updateheader == 0
                disp(['Could not find ' Misc.USSelection{i} ' in the header of the US file, Updata the headers of file: ' Misc.USfile]);
            else
                disp(['Could not find ' Misc.USSelection{i} ' in the header of the US file, Update the headers in:  Misc.USheaders']);
            end
            bool_error=1;
            IndError(i)=1;
        end
    end
    if bool_error ==1
        warning(['Removed several muscles with US information from the',...
            ' analysis because these muscles are not in the model, or do not span the selected DOFs (see above)']);
        Misc.USSelection(find(IndError)) = [];
    end    
    
    %% Process the data    
    for iF = 1:nF
        USdat              = USFile(iFile).data;        
        [nfr, nc] = size(USdat);  
        % get the US data
        nIn = length(Misc.USSelection);
        USsel = nan(nfr,nIn);   USindices = nan(nIn,1);
        USselection = Misc.USSelection;
        for i=1:length(Misc.USSelection)
            ind = strcmp(Misc.USSelection{i},USheaders);
            USsel(:,i) = USdat(:,ind);
            USindices(i) = find(strcmp(Misc.USSelection{i},DatStore(iF).MuscleNames));
        end        

        DatStore(iF).US.nUS           = length(EMGindices);
        DatStore(iF).US.USindices     = EMGindices;
        DatStore(iF).US.USsel         = EMGsel;
        DatStore(iF).US.USselection   = EMGselection;
        DatStore(iF).US.time           = USdat(:,1);
        DatStore(iF).US.boolUS         = boolUS;
        DatStore(iF).US.USspline      = spline(DatStore(iF).US.time',DatStore(iF).US.EMGsel');        
    end   
else
    for iF = 1:length(DatStore)
        % Boolean in DatStore that EMG info is not used ?
        DatStore(iF).EMG.MaxScale       = [];
        DatStore(iF).EMG.EMGbounds      = [];
        DatStore(iF).EMG.nEMG           = [];
        DatStore(iF).EMG.EMGindices     = [];
        DatStore(iF).EMG.EMGsel         = [];
        DatStore(iF).EMG.EMGselection   = [];
        DatStore(iF).EMG.boolEMG         = boolEMG;
    end    
end

